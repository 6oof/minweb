package components

import "html/template"

templ ShowcaseForm(csrf template.HTML, nameError , result string) {
	<div class="mt-8" id="result" hx-swap="outerHTML">
		<form class="max-w-sm mx-auto" hx-post="/showcase-form" hx-target="#result">
			@templ.Raw(csrf)
			<label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
				A quick
				and dirty example of HTMX Tailwind and MinWeb working together
			</label>
			<input
				type="text"
				id="name"
				if len(nameError) > 0 {
					class="bg-red-50 border border-red-500 text-red-900 placeholder-red-700 text-sm rounded-lg focus:ring-red-500 focus:border-red-500 block w-full p-2.5 dark:bg-red-100 dark:border-red-400"
				} else {
					class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary dark:focus:border-primary"
				}
				placeholder="Bruce Wayne"
				name="Name"
			/>
			<button
				type="submit"
				class="text-white bg-primary hover:bg-primary focus:ring-4 focus:outline-none focus:ring-primary font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-primary dark:hover:bg-primary dark:focus:ring-primary"
			>Dispatch</button>
		</form>
		if len(result) > 0 {
			<div class="text-xl text-white mt-8">
				{ result }
			</div>
		}
		if len(nameError) > 0 {
			<div class="text-red-700">{ nameError }</div>
		}
	</div>
}
